Given an integer array nums where the elements are sorted in ascending order, convert it to a 
height-balanced binary search tree.

Input: nums = [-10,-3,0,5,9]
Output: [0,-3,9,-10,null,5]
Explanation: [0,-10,5,null,-3,null,9] is also accepted:

class Solution {

    public TreeNode sort(int[] nums, int s, int e) {

        if (s >= e) return null;
        int mid = (e - s) / 2;
        TreeNode root = new TreeNode();
        
        root.val = nums[mid + s];
        root.left = sort(nums, s, (s + mid));
        root.right = sort(nums, s + mid + 1, e);

        return root;
    }

    public TreeNode sortedArrayToBST(int[] nums) {
        
        return sort(nums, 0, nums.length)  ;     
    }
}
